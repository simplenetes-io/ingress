# These settings are designed for HAProxy 2.0
global
    # Sets the maximum size of the Diffie-Hellman parameters used for generating the ephemeral/temporary Diffie-Hellman key in case of DHE key exchange.
    tune.ssl.default-dh-param 2048
    # TODO: check these settings so they are up to date and safe choices.
    ssl-default-bind-options   no-tls-tickets ssl-min-ver TLSv1.2
    ssl-default-bind-ciphers   ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
    # Note: maxconn requires ulimit -n(2xmaxconn+100)
    # We need to know that the servers aggregated conn limits are sufficient to handle the number of connections let through.


defaults
    timeout server  10s  # Inactivity time
    timeout client  10s  # Inactivity time
    timeout connect 10s  # Max wait to connect to server
    timeout tunnel  10m  # TCP mode, the terminating side must apply HTTP mode control. HTTP mode inactivity time for upgrading connections.
    timeout http-request 10s  # Time to wait for a complete HTTP request
    # If 400/408 errors occur alot, see: https://cbonte.github.io/haproxy-dconv/1.7/configuration.html#option%20http-ignore-probes
    # Error files served by haproxy on occasions
    errorfile 408 /mnt/conf/error408.http
    errorfile 500 /mnt/conf/error500.http
    errorfile 502 /mnt/conf/error502.http
    errorfile 503 /mnt/conf/error503.http
    errorfile 504 /mnt/conf/error504.http

frontend 443-https
    bind :443 ssl crt /mnt/usercerts crt /mnt/autocerts
    mode http
    # One IP cannot have more than 100 connections opened over a 3 sec period.
    # IPv4
    stick-table type ip size 100k expire 30s store conn_rate(3s)
    tcp-request connection track-sc0 src
    tcp-request connection reject if { sc0_conn_rate ge 100 }
    # IPv6
    #stick-table type ipv6 size 100k expire 30s store conn_rate(3s)
    #tcp-request connection track-sc1 src
    #tcp-request connection reject if { sc1_conn_rate ge 100 }
    # Maximum wait to hold the contents for haproxy to figure out what it is.
    tcp-request inspect-delay 10s
    # Make browsers always use HTTPS for the domain. Remember for 30 days.
    http-response set-header Strict-Transport-Security "max-age=2592000; includeSubDomains"

    default_backend defaulthttps

frontend 80-http
    bind :80
    mode http
    # One IP cannot have more than 100 connections opened over a 3 sec period.
    # IPv4
    stick-table type ip size 100k expire 30s store conn_rate(3s)
    tcp-request connection track-sc0 src
    tcp-request connection reject if { sc0_conn_rate ge 100 }
    # IPv6
    #stick-table type ipv6 size 100k expire 30s store conn_rate(3s)
    #tcp-request connection track-sc1 src
    #tcp-request connection reject if { sc1_conn_rate ge 100 }
    # Maximum wait to hold the contents for haproxy to figure out what it is.
    tcp-request inspect-delay 10s
    # Allow request when they are proven HTTP requests.
    tcp-request content accept if HTTP

    default_backend default

backend default
    mode http
    # Enable insertion of the X-Forwarded-For header to requests sent to servers so servers can see the actualy client IP.
    option forwardfor
    server server-1 127.0.0.1:61010 send-proxy

backend defaulthttps
    mode http
    # Enable insertion of the X-Forwarded-For header to requests sent to servers so servers can see the actualy client IP.
    option forwardfor
    # Set a HTTP header "X-proto: https" so that server can see that the client request was made over HTTPS.
    http-request set-header X-Proto https
    server server-1 127.0.0.1:61011 send-proxy
